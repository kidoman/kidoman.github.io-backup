<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: life | Karan Misra]]></title>
  <link href="http://kidoman.io/categories/life/atom.xml" rel="self"/>
  <link href="http://kidoman.io/"/>
  <updated>2014-05-18T02:25:18+05:30</updated>
  <id>http://kidoman.io/</id>
  <author>
    <name><![CDATA[Karan Misra]]></name>
    <email><![CDATA[karan.misra@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Made my day]]></title>
    <link href="http://kidoman.io/life/made-my-day.html"/>
    <updated>2014-05-15T14:59:44+05:30</updated>
    <id>http://kidoman.io/life/made-my-day</id>
    <content type="html"><![CDATA[<p>Saw this tweet today:</p>

<blockquote class="twitter-tweet" data-partner="tweetdeck"><p><a href="https://twitter.com/kid0m4n">@kid0m4n</a> Day 3 will include dusting off 1 of 2 BeagleBone Black&#39;s and trying out EMBD. Thanks for that! =D</p>&mdash; Marco Monteiro (@mynameismarco) <a href="https://twitter.com/mynameismarco/statuses/466824607773626368">May 15, 2014</a></blockquote>


<script async src="http://kidoman.io//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>Made my day!</p>

<p>We have spent many sleepless nights tweaking <a href="https://github.com/kidoman/embd">EMBD</a>&rsquo;s API till it felt just right! Hope you guys have as much fun using it as we had creating it!</p>

<p>And while you are at it, follow my hero, <a href="https://twitter.com/mynameismarco">@mynameismarco</a> !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EMBD: Behind the Scenes]]></title>
    <link href="http://kidoman.io/life/embd-behind-scenes.html"/>
    <updated>2014-05-06T06:55:00+05:30</updated>
    <id>http://kidoman.io/life/embd-behind-scenes</id>
    <content type="html"><![CDATA[<p>For the impatient, TheBot was an experiment to kickstart a hardware engineering culture at <strong>ThoughtWorks</strong>. We choose the Raspberry Pi (RPi) as the prototyping platform and Golang as the language in which to create the firmware. We felt the need for a solid hardware abstraction layer (HAL) which would allow us to not only target the RPi, but soon expand to other platforms as well. We also wanted to make it dead easy to talk to a variety of sensors. Since there were no such existing frameworks for <a href="http://golang.org/">Golang</a>, we ended up writing our own, and we called it <a href="https://embd.kidoman.io/">EMBD</a> (<a href="https://github.com/kidoman/embd">Github</a>).</p>

<blockquote><p><strong>EMBD</strong> enables you to get started on your project quickly by providing build in support for the various <a href="https://github.com/kidoman/embd#platforms-supported">platforms</a>, <a href="https://github.com/kidoman/embd#protocols-supported">protocols</a>, <a href="https://github.com/kidoman/embd#sensors-supported">sensors</a>, <a href="https://github.com/kidoman/embd#controllers">controllers</a>. It also allows your prototyping code to survive through to production because of the built in hardware abstraction layer and Golang&rsquo;s <a href="https://github.com/kidoman/embd/wiki/Why-Go">versatility</a>. Thus significantly shortening the <strong>time to market</strong>.</p></blockquote>

<h2>A little history</h2>

<p>A 20 year old company, <strong>ThoughtWorks</strong> has been primarily into software. We have made our mark in the ability to create high quality custom enterprise grade software over the years. Data analytics is a key focus areas, but there are others with deeper pockets already investing. Mobile development is also a conquered field. So when our chairman, <a href="http://en.wikipedia.org/wiki/Neville_Roy_Singham">Roy</a>, asked ThoughtWorkers to preempt the next big thing, we naturally started looking at the Internet of Things (<strong>IoT</strong>) as one of the avenues for innovation. Approaching it from a purely hardware perspective would have meant a lot of playing catch up, as we would need to seed a lot of talent in spaces before we could catch up:</p>

<ul>
<li>material science</li>
<li>industrial design</li>
<li>manufacturing, etc.</li>
</ul>


<p>We wanted to get started quickly, leveraging on abilities we have honed over the last two decades. And one of the low hanging fruits to explore was the software side of internet connected devices, firmware for the rovers and quadcopters, the user experiences of these <a href="https://nest.com/thermostat/life-with-nest-thermostat/">new contraptions</a>.</p>

<h2>Enter, TheBot</h2>

<p>We deliberately choose to build something simple &ndash; to push the odds in our favor. However, the simplicity proved to be a boon as it allowed us a lot of scope for innovation in the software side of things. We also wanted to take this opportunity to study. To glean experiences from. From many angles, this is just scratching the surface of what is to come, but you have got to start somewhere. Think of it as bulb # 1.</p>

<p><div class="embed-video-container"><iframe src="//www.youtube.com/embed/iMXjkZ4B3EM "></iframe></div></p>

<p>(We first showcased this to public on Jan 10, 2014 and dedicated the effort to Aaron, a good soul and a ThoughtWorker, who passed away on Jan 11, 2013.)</p>

<p><img class="center" src="/images/thebot-small.jpg" title="TheBot" ></p>

<p>It was a lot of work. A lot of things you took for granted suddenly needed to be taken care of in code and in hardware. The fact that the code now had to actually &ldquo;run&rdquo; on the hardware brought in additional challenges as well. Concurrency is the name of the game. Most of the events which you needed to handle and react to (ex: a obstacle suddenly apprearing infront of the car, while the car is turning on its own) would come concurrently, in no particular guarenteed order. The firmware had to be both efficient and easy to reason about.</p>

<h2>Golang to the rescue</h2>

<blockquote><p>Created by a team at Google in 2007, Golang aimed at making software development pleasurable again. Software that built quickly, ran well on multi-core hardware in networked environments.</p></blockquote>

<p>(see the official <a href="http://golang.org/doc/faq#What_is_the_purpose_of_the_project">FAQs</a> for a more complete picture)</p>

<p>Golang has excellent support for concurrency in the core language. The RaspberryPi is single threaded and we needed the car to handle multiple real world interactions at the same time. Using threads would have forced us to use mutexes, etc, for synchronization. The ‘goroutines+channels’ architecture in Golang helped us focus on the “actual” interactions. (Goroutines are light weight threads which are executed via the Go runtime on real threads via a M:N mapping. Channels are a typed mechanism for passing messages between goroutines). The resulting code is much easier to read, reason with and understand.</p>

<blockquote><p>“Simply running the binary was always enough. This helped tremendously in shortening our development/build/deploy cycles and made the process even more gratifying.”</p></blockquote>

<p>Golang is a statically typed, garbage collected and compiled programming language. However, in use, it feels like a FAST (slightly) verbose scripting language which has support for systems programming and duck typing. Since the cross compiled binary was entirely self contained, no runtime was needed. Simply running the binary was enough, which helped tremendously in shortening our development, build and deploy cycles and made the process even more gratifying.</p>

<p>(a recent article by <a href="https://www.spacemonkey.com/blog/posts/go-space-monkey">SpaceMonkey</a> details their story of switching from Python to Golang for the firmward of their embedded storage device. Its a must read to get a better idea of what Golang has to offer in this space.)</p>

<h2>Summary</h2>

<p>These and various other reasons led us to create <a href="http://embd.kidoman.io/">EMBD</a> and release it to the world.</p>

<p><strong>PS:</strong> Earlier, this article was part of the <a href="/framework/embd.html">Introducing EMBD</a> piece. However, based on feedback, I decided to split them so that they the original article focused solely on the new framework and did not pull focus to other tertiary things.</p>

<h2>Links</h2>

<p>Homepage: <a href="http://embd.kidoman.io/">http://embd.kidoman.io/</a><br/>
Github: <a href="https://github.com/kidoman/embd">https://github.com/kidoman/embd</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Joy of Programming]]></title>
    <link href="http://kidoman.io/life/joy-of-programming.html"/>
    <updated>2013-09-18T17:54:00+05:30</updated>
    <id>http://kidoman.io/life/joy-of-programming</id>
    <content type="html"><![CDATA[<p>Unicorns. and Rainbows. Besides being <a href="http://rubygems.org/gems/unicorn">Ruby</a> <a href="http://rubygems.org/gems/rainbows">gems</a>, they also happen to exactly articulate the feeling I have in my head the moment I start thinking about programming.</p>

<p>Ever since I first opened up &ldquo;Doom.exe&rdquo; in notepad and stared at disbelief at the gibberish machine code, something has always driven me to figure out the the underlying DNA of every piece of software I have chanced upon. Obviously as the years have gone by, the amount of software out there has increased a trillion fold, but every now and then, I still chance upon a masterpiece which immediately attracts a &ldquo;holy cow!&rdquo; from me. It happens less often now-a-days but <a href="http://www.cs.utah.edu/~aek/code/card.cpp">still</a>&hellip;</p>

<p>Doom caught my fancy as it was the first FPS I ever played (it was way back in 1994.) After poring through the machine code and trying to make sense of it, I started down my first programming project. Making my own game. The rough tasklist:</p>

<ul>
<li>Think of a game idea</li>
<li>???</li>
<li>$$$</li>
</ul>


<p>The figuring out the ??? has definitely been the executive summary of my life story. And I guess that is something I share with every programmer out there. Sometimes, I <del datetime="2013-09-24T03:10:03+00:00">don&rsquo;t even care</del> pretend to care about the idea (step #1) and the business model around it (step #3). If the challenge is strong enough and calls to me, that&rsquo;s good enough. The years have made me shift priorities of course, but figuring out the unknown still has a weird hold on me. It calls to me in a very animalistic fashion; and hopefully will for years to come&hellip; It helps drown out the bureaucracy of the work place and get into the zone; a zone that I fondly call &ldquo;Joy of Programming&rdquo;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I have got 7!]]></title>
    <link href="http://kidoman.io/life/i-have-got-7.html"/>
    <updated>2013-06-11T07:06:00+05:30</updated>
    <id>http://kidoman.io/life/i-have-got-7</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/got-ios7.png" title="iOS 7" ></p>

<p>Just updated both my devices (well technically Neeru&rsquo;s and mine) and couldn&rsquo;t be happier.</p>

<p>Will post a detailed analysis in some time&hellip;</p>

<p>PS: What you see on the screen is iOS 7 doing opportunistic updates for all my apps! Hurray&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BIMER at ThoughtWorks]]></title>
    <link href="http://kidoman.io/life/bimer-at-thoughtworks.html"/>
    <updated>2013-05-22T23:24:00+05:30</updated>
    <id>http://kidoman.io/life/bimer-at-thoughtworks</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been almost a week since we started <a href="/life/2013/05/what-is-bimer/">BIMER</a> at ThoughtWorks.</p>

<p>As expected, BIMER has evolved&hellip; we no longer just do one exercise. So far we have done:</p>

<ul>
<li>Situps</li>
<li>Lunges</li>
<li>Pushups</li>
<li>Plank</li>
<li>(few more we have invented on the spot and don&rsquo;t have a name for)</li>
</ul>


<p>Pro Tip: It definitely helps to decide the next BIMER at the end of your current work out&hellip; saves a precious few minutes at times :)</p>

<h2>Any ways, a few snaps</h2>

<p><img src="/images/venki-superman.jpg"></p>

<p><img src="/images/bhaimi-budha.jpg"></p>

<p><img src="/images/priya-walk-on-wall.jpg"></p>
]]></content>
  </entry>
  
</feed>
